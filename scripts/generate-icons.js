#!/usr/bin/env node

const sharp = require('sharp');
const fs = require('fs');
const path = require('path');

const INPUT_ICON = path.join(__dirname, '..', 'assets', 'icon.png');

async function generateIcons() {
  try {
    console.log('üé® Generating web icons...');
    console.log('üì± Note: Native iOS/Android icons are automatically generated by Expo prebuild');
    
    // Check if input icon exists
    if (!fs.existsSync(INPUT_ICON)) {
      throw new Error(`Input icon not found: ${INPUT_ICON}`);
    }

    console.log(`üì± Processing icon: ${INPUT_ICON}`);

    // Generate common sizes for web and other platforms
    console.log('üåê Generating additional icon sizes...');
    const commonSizes = [16, 32, 64, 128, 256, 512];
    const iconsDir = path.join(__dirname, '..', 'assets', 'icons');
    fs.mkdirSync(iconsDir, { recursive: true });
    
    for (const size of commonSizes) {
      const outputPath = path.join(iconsDir, `icon-${size}.png`);
      
      await sharp(INPUT_ICON)
        .resize(size, size, { 
          kernel: sharp.kernel.lanczos3,
          fit: 'contain',
          background: { r: 0, g: 0, b: 0, alpha: 0 }
        })
        .png({ 
          quality: 100,
          compressionLevel: 6,
          progressive: false
        })
        .toFile(outputPath);
      
      console.log(`  ‚úÖ icon-${size}.png (${size}x${size})`);
    }

    // Generate favicon
    console.log('üåê Generating favicon...');
    const faviconPath = path.join(__dirname, '..', 'assets', 'favicon.ico');
    await sharp(INPUT_ICON)
      .resize(32, 32, { 
        kernel: sharp.kernel.lanczos3,
        fit: 'contain',
        background: { r: 0, g: 0, b: 0, alpha: 0 }
      })
      .png()
      .toFile(faviconPath.replace('.ico', '.png'));
    
    console.log(`  ‚úÖ favicon.png (32x32)`);

    console.log('');
    console.log('üéâ Icon generation completed successfully!');
    console.log('üìã Generated icons for:');
    console.log('   ‚Ä¢ Web/Common (6 sizes + favicon)');
    console.log('   ‚Ä¢ Native iOS/Android icons will be generated by Expo prebuild');
    
  } catch (error) {
    console.error('‚ùå Error generating icons:', error.message);
    process.exit(1);
  }
}

// Run the script
if (require.main === module) {
  generateIcons();
}

module.exports = { generateIcons };