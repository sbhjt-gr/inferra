import React, { useState } from 'react';
import { StyleSheet, View, Text, ScrollView, TouchableOpacity } from 'react-native';
import { MaterialIcons } from '@expo/vector-icons';
import { Dialog, Portal, Button } from 'react-native-paper';
import { useTheme } from '../../context/ThemeContext';

interface AITermsDialogProps {
  visible: boolean;
  onDismiss: () => void;
  onAccept: () => void;
}

const AITermsDialog: React.FC<AITermsDialogProps> = ({
  visible,
  onDismiss,
  onAccept
}) => {
  const { theme: currentTheme } = useTheme();

  return (
    <Portal>
      <Dialog
        visible={visible}
        onDismiss={onDismiss}
        style={{
          backgroundColor: currentTheme === 'dark' ? '#1E1E1E' : '#FFFFFF',
          maxHeight: '80%'
        }}
      >
        <Dialog.Title style={{ 
          color: currentTheme === 'dark' ? '#FFFFFF' : '#000000',
          textAlign: 'center'
        }}>
          AI-Generated Content Terms
        </Dialog.Title>
        
        <Dialog.Content>
          <ScrollView style={styles.scrollContainer}>
            <View style={styles.section}>
              <Text style={[
                styles.sectionTitle,
                { color: currentTheme === 'dark' ? '#FFFFFF' : '#000000' }
              ]}>
                AI-generated content may contain errors. Always verify important information. {'\n \n'}
                Content Generated by AI
              </Text>
              <Text style={[
                styles.sectionText,
                { color: currentTheme === 'dark' ? '#CCCCCC' : '#666666' }
              ]}>
                This app uses artificial intelligence to generate responses. All content marked as "Generated by AI" is produced by machine learning models and should be verified for accuracy.
              </Text>
            </View>

            <View style={styles.section}>
              <Text style={[
                styles.sectionTitle,
                { color: currentTheme === 'dark' ? '#FFFFFF' : '#000000' }
              ]}>
                Important Disclaimers
              </Text>
              <Text style={[
                styles.sectionText,
                { color: currentTheme === 'dark' ? '#CCCCCC' : '#666666' }
              ]}>
                • AI-generated content may contain errors or inaccuracies{'\n'}
                • Responses are based on training data and may not reflect current events{'\n'}
                • Do not rely on AI content for medical, legal, or financial advice{'\n'}
                • Always verify important information from authoritative sources
              </Text>
            </View>

            <View style={styles.section}>
              <Text style={[
                styles.sectionTitle,
                { color: currentTheme === 'dark' ? '#FFFFFF' : '#000000' }
              ]}>
                Safety & Content Policy
              </Text>
              <Text style={[
                styles.sectionText,
                { color: currentTheme === 'dark' ? '#CCCCCC' : '#666666' }
              ]}>
                • AI models are designed to refuse harmful content generation{'\n'}
                • Content filters may not catch all potentially harmful output{'\n'}
                • Users are responsible for appropriate use of AI features
              </Text>
            </View>

      
          </ScrollView>
        </Dialog.Content>
        
        <Dialog.Actions style={styles.actions}>
          <Button 
            onPress={onDismiss}
            textColor={currentTheme === 'dark' ? '#CCCCCC' : '#666666'}
          >
            Cancel
          </Button>
          <Button 
            onPress={onAccept}
            textColor={'#ffffff'}
            mode="contained"
            buttonColor={currentTheme === 'dark' ? '#BB86FC' : '#6200EA'}
          >
            I Understand
          </Button>
        </Dialog.Actions>
      </Dialog>
    </Portal>
  );
};

const styles = StyleSheet.create({
  scrollContainer: {
    maxHeight: 400,
  },
  section: {
    flexDirection: 'column',
    marginBottom: 20,
    paddingBottom: 16,
    borderBottomWidth: 1,
    borderBottomColor: 'rgba(255, 255, 255, 0.1)',
  },
  sectionIcon: {
    marginBottom: 8,
    alignSelf: 'flex-start',
  },
  sectionTitle: {
    fontSize: 16,
    fontWeight: '600',
    marginBottom: 8,
    lineHeight: 22,
  },
  sectionText: {
    fontSize: 14,
    lineHeight: 20,
    textAlign: 'left',
  },
  actions: {
    justifyContent: 'space-between',
    paddingHorizontal: 8,
  },
});

export default AITermsDialog;
